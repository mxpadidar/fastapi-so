"""create files table and update users

Revision ID: 41d575e77aaf
Revises: f92a3c3924d4
Create Date: 2024-10-25 01:59:05.549872

"""

from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "41d575e77aaf"
down_revision: Union[str, None] = "f92a3c3924d4"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # create shared schema
    op.execute("CREATE SCHEMA IF NOT EXISTS shared")

    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "files",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("bucket", sa.String(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("size", sa.Integer(), nullable=False),
        sa.Column("mime_type", sa.String(), nullable=False),
        sa.Column("is_used", sa.Boolean(), nullable=False),
        sa.Column("metadata", sa.JSON(), nullable=True),
        sa.Column("url", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
        schema="shared",
    )
    op.add_column(
        "users",
        sa.Column("registered_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=True),
        schema="account",
    )
    op.add_column("users", sa.Column("deactivated_at", sa.DateTime(timezone=True), nullable=True), schema="account")
    op.add_column("users", sa.Column("avatar_file_id", sa.Integer(), nullable=True), schema="account")
    op.create_foreign_key(
        None, "users", "files", ["avatar_file_id"], ["id"], source_schema="account", referent_schema="shared"
    )
    op.drop_column("users", "is_active", schema="account")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "users",
        sa.Column("is_active", sa.BOOLEAN(), server_default=sa.text("false"), autoincrement=False, nullable=False),
        schema="account",
    )
    op.drop_constraint(None, "users", schema="account", type_="foreignkey")  # type: ignore
    op.drop_column("users", "avatar_file_id", schema="account")
    op.drop_column("users", "deactivated_at", schema="account")
    op.drop_column("users", "registered_at", schema="account")
    op.drop_table("files", schema="shared")
    # ### end Alembic commands ###

    # drop shared schema
    op.execute("DROP SCHEMA IF EXISTS shared CASCADE")
